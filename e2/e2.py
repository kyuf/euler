#euler 2
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""
#function to find nth fibonacci
def fib(n, fib_dic = {1: 1, 2: 2}):
	if n in fib_dic:
		return fib_dic[n]
	new_fib = fib(n - 1) + fib(n - 2)
	fib_dic[n] = new_fib
	return new_fib

sum_n = 0

#summing even terms
n = 2
while True:
	new_fib = fib(n)
	if new_fib > 4000000:
		break
	sum_n += new_fib
	n += 3

print(sum_n)
